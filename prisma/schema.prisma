generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  password  String
  role      Role      @default(USER)
  posts     Post[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Post {
  id           String   @id @default(cuid())
  title        String
  slug         String   @unique
  content      String
  published    Boolean  @default(true)
  thumbnailUrl String? // NEW: l∆∞u URL Cloudinary
  authorId     String
  categoryId   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Hashnode fields
  hashnodeId      String?   @unique
  hashnodeUrl     String?
  isPublishedOnHashnode Boolean @default(false)

  author   User      @relation(fields: [authorId], references: [id])
  category Category? @relation(fields: [categoryId], references: [id])
  tags     Tag[]
  comments Comment[]

  @@index([authorId])
  @@index([categoryId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String   @db.Text
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}
